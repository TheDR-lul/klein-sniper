use chrono::{DateTime, Utc,ParseError};
use thiserror::Error;
use rusqlite;

/// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏
#[derive(Debug, Clone)]
pub struct Offer {
    pub id: String,
    pub title: String,
    pub description: String,
    pub price: f64,
    pub location: String,
    pub model: String,
    pub link: String,
    pub posted_at: DateTime<Utc>,
    pub fetched_at: DateTime<Utc>,
    pub user_id: Option<String>,     
    pub user_name: Option<String>,   
    pub user_url: Option<String>,    
}
/// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª–∏ (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π)
#[derive(Debug, Clone)]
pub struct ModelStats {
    pub model: String,
    pub avg_price: f64,
    pub std_dev: f64,
    pub last_updated: DateTime<Utc>,
}

/// –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞
#[derive(Debug, Clone)]
pub struct ScrapeRequest {
    pub query: String,
    pub category_id: String,
}

/// –û—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü
#[derive(Debug)]
pub enum ScraperError {
    HttpError(String),
    InvalidResponse(String),
    HtmlParseError(String),
}

/// –û—à–∏–±–∫–∏, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ HTML
#[derive(Debug)]
pub enum ParserError {
    HtmlParseError(String),
    MissingField(String),
}

/// –û—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º (–ë–î)
#[derive(Debug, Error)]
pub enum StorageError {
    #[error("‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {0}")]
    DatabaseError(String),

    #[error("üîç –ù–µ –Ω–∞–π–¥–µ–Ω–æ")]
    NotFound,

    #[error("üìÖ –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã: {0}")]
    ParseError(#[from] ParseError),
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ rusqlite::Error –≤ StorageError
impl From<rusqlite::Error> for StorageError {
    fn from(err: rusqlite::Error) -> Self {
        StorageError::DatabaseError(err.to_string())
    }
}

/// –û—à–∏–±–∫–∏ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, Telegram)
#[derive(Debug)]
pub enum NotifyError {
    ApiError(String),
    Unreachable,
}
